mutate(
Rank = parse_number(Best_School_clean$Rank),
"Early Career Pay" = parse_number(Best_School_clean$`Early Career Pay`),
"Mid Career Pay" = parse_number(Best_School_clean$`Mid-Career Pay`),
"% High Meaning" = parse_number(Best_School_clean$`% High Meaning`),
"% STEM Degrees" = parse_number(Best_School_clean$`% STEM Degrees`),
)
View(Best_School)
Best_School_clean = Best_School%>%
rename(name = "School Name")
Best_School_clean$`Mid Career Pay` = str_replace_all(Best_School_clean$`Mid Career Pay`, "-", " ")
Best_School_clean = Best_School%>%
rename(name = "School Name")
Best_School_clean$`Mid Career Pay` = str_replace(Best_School_clean$`Mid Career Pay`, "-", " ")
Best_School_clean = Best_School%>%
rename(name = "School Name")
Best_School_clean = Best_School_clean%>%
mutate(
Rank = parse_number(Best_School_clean$Rank),
"Early Career Pay" = parse_number(Best_School_clean$`Early Career Pay`),
"Mid Career Pay" = parse_number(Best_School_clean$`Mid-Career Pay`),
"% High Meaning" = parse_number(Best_School_clean$`% High Meaning`),
"% STEM Degrees" = parse_number(Best_School_clean$`% STEM Degrees`),
)
View(Best_School)
Best_School_clean = Best_School%>%
rename(name = "School Name")
Best_School_clean$`Mid-Career Pay` = str_remove(Best_School_clean$`Mid-Career Pay`, "Mid-Career Pay:")
Best_School_clean = Best_School_clean%>%
mutate(
Rank = parse_number(Best_School_clean$Rank),
"Early Career Pay" = parse_number(Best_School_clean$`Early Career Pay`),
"Mid-Career Pay" = parse_number(Best_School_clean$`Mid-Career Pay`),
"% High Meaning" = parse_number(Best_School_clean$`% High Meaning`),
"% STEM Degrees" = parse_number(Best_School_clean$`% STEM Degrees`),
)
#Extract school name
Best_School_clean$name = str_remove(Best_School_clean$name, "School Name:")
head(Best_School_clean,10)
abc = left_join(Best_School_clean, tuition_with_diversity, by = name)
abc = left_join(Best_School_clean, tuition_with_diversity, by = "name")
View(abc)
abc = left_join(Best_School_clean, tuition_with_diversity, by = "name") %>%
na.omit(abc)
#Modify "School Name" to "name" to match the tuition_with_diversity dataset
Best_School_clean = Best_School%>%
rename(name = "School Name")
#Extract school name
Best_School_clean$name = str_remove(Best_School_clean$name, "School Name:")
Best_School_clean$`Mid-Career Pay` = str_remove(Best_School_clean$`Mid-Career Pay`, "Mid-Career Pay:")
#Extract number content from certain column
Best_School_clean = Best_School_clean%>%
mutate(
Rank = parse_number(Best_School_clean$Rank),
"Early Career Pay" = parse_number(Best_School_clean$`Early Career Pay`),
"Mid-Career Pay" = parse_number(Best_School_clean$`Mid-Career Pay`),
"% High Meaning" = parse_number(Best_School_clean$`% High Meaning`),
"% STEM Degrees" = parse_number(Best_School_clean$`% STEM Degrees`),
)
head(Best_School_clean,10)
abc = left_join(Best_School_clean, tuition_with_diversity, by = "name") %>%
na.omit(abc)
abc = left_join(Best_School_clean, tuition_with_diversity, by = "name") %>%
na.omit(abc)
View(abc)
#Modify "School Name" to "name" to match the tuition_with_diversity dataset
Best_School_clean = Best_School%>%
rename(name = "School Name")
#Extract school name
Best_School_clean$name = str_remove(Best_School_clean$name, "School Name:")
Best_School_clean$`Mid-Career Pay` = str_remove(Best_School_clean$`Mid-Career Pay`, "Mid-Career Pay:")
#Extract number content from certain column
Best_School_clean = Best_School_clean%>%
mutate(
Rank = parse_number(Best_School_clean$Rank),
"Early Career Pay" = parse_number(Best_School_clean$`Early Career Pay`),
"Mid-Career Pay" = parse_number(Best_School_clean$`Mid-Career Pay`),
"% High Meaning" = parse_number(Best_School_clean$`% High Meaning`),
"% STEM Degrees" = parse_number(Best_School_clean$`% STEM Degrees`),
)
Best_School_clean = Best_School_clean%>%
select(Rank, name, "Early Career Pay", "Mid-Career Pay", "% High Meaning", "% STEM Degrees" )
head(Best_School_clean,10)
abc = left_join(Best_School_clean, tuition_with_diversity, by = "name") %>%
na.omit(abc)
Fianl_data = left_join(Best_School_clean, tuition_with_diversity, by = "name") %>%
na.omit(Fianl_data)
head(Fianl_data,10)
View(Fianl_data)
#Modify "School Name" to "name" to match the tuition_with_diversity dataset
Best_School_clean = Best_School%>%
rename(name = "School Name")
#Extract school name
Best_School_clean$name = str_remove(Best_School_clean$name, "School Name:")
Best_School_clean$`Mid-Career Pay` = str_remove(Best_School_clean$`Mid-Career Pay`, "Mid-Career Pay:")
#Extract number content from certain column
Best_School_clean = Best_School_clean%>%
mutate(
Rank = parse_number(Best_School_clean$Rank),
"Early Career Pay" = parse_number(Best_School_clean$`Early Career Pay`),
"Mid-Career Pay" = parse_number(Best_School_clean$`Mid-Career Pay`),
"% High Meaning" = parse_number(Best_School_clean$`% High Meaning`),
"% STEM Degrees" = parse_number(Best_School_clean$`% STEM Degrees`),
)
Best_School_clean = Best_School_clean%>%
select(name, "Early Career Pay", "Mid-Career Pay", "% High Meaning", "% STEM Degrees" )
head(Best_School_clean,10)
Fianl_data = left_join(Best_School_clean, tuition_with_diversity, by = "name") %>%
na.omit(Fianl_data)
head(Fianl_data,10)
Fianl_data = left_join(Best_School_clean, tuition_with_diversity, by = "name") %>%
na.omit(Fianl_data)
rownames(Fianl_data)=1:nrow(Fianl_data)
head(Fianl_data,10)
#The tidy version of the final data is saved under below:
getwd()
getwd()
write.xlsx(Fianl_data, Tidy_Data, row.names = FALSE)
library(xlsx)
install.packages("xlsx")
library("xlsx")
getwd()
write.xlsx(Fianl_data, Tidy_Data, row.names = FALSE)
getwd()
write.xlsx(Fianl_data, "Tidy_Data", row.names = FALSE)
getwd()
write.xlsx(Fianl_data, "Tidy_Data.xlsx", row.names = FALSE)
View(historical_tuition)
View(historical_tuition)
historical_tuition =read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-10/historical_tuition.csv')
head(historical_tuition,10)
getwd()
write.xlsx(historical_tuition, "Tuition_trend.xlsx", row.names = FALSE)
historical_tuition
write.xlsx(historical_tuition, "Tuition_trend.xlsx", row.names = FALSE)
openxlsx::write.xlsx(historical_tuition, "Tuition_trend.xlsx", row.names = FALSE)
getwd()
write.xlsx(Fianl_data, "Tidy_Data.xlsx", row.names = FALSE)
View(finaldata)
write.xlsx(historical_tuition, "Tuition_trend.xlsx")
head(historical_tuition,10)
View(historical_tuition)
View(historical_tuition)
#filter tuition type of "All Constant"
All_Constant = historical_tuition%>%
filter(historical_tuition$tuition_type = "All Constant")
#filter tuition type of "All Constant"
All_Constant = historical_tuition%>%
filter(historical_tuition$tuition_type == "All Constant")
View(All_Constant)
ggplot(All_Constant, mapping = aes(All_Constant$year, All_Constant$tuition_cost, color = All_Constant$type)) +geom_point()+geom_line()+ggtitle('Tuition by year for school with tuition type All Constant')+theme(plot.title = element_text(hjust = 0.5))+facet_wrap(~All_Constant$type, ncol = 3, scales = 'free')+xlab("Time (4 means 4 hours ahead of now)")
ggplot(All_Constant, mapping = aes(All_Constant$year, All_Constant$tuition_cost, color = All_Constant$type)) +geom_point()+geom_line()+ coord_flip() + ggtitle('Tuition by year for school with tuition type All Constant')+theme(plot.title = element_text(hjust = 0.5))+facet_wrap(~All_Constant$type, ncol = 3, scales = 'free')+xlab("Time (4 means 4 hours ahead of now)")
ggplot(All_Constant, mapping = aes(All_Constant$year, All_Constant$tuition_cost, color = All_Constant$type)) +geom_point()+geom_line()+ coord_flip() + ggtitle('Tuition by year for school with tuition type All Constant')+theme(plot.title = element_text(hjust = 0.5))+facet_wrap(~All_Constant$type, ncol = 3, scales = 'free')+ylab("Tuition in USD)")
ggplot(All_Constant, mapping = aes(All_Constant$year, All_Constant$tuition_cost, color = type)) +geom_point()+geom_line()+ coord_flip() + ggtitle('Tuition by year for school with tuition type All Constant')+theme(plot.title = element_text(hjust = 0.5))+facet_wrap(~All_Constant$type, ncol = 3, scales = 'free')+ylab("Tuition in USD)")
ggplot(All_Constant, mapping = aes(All_Constant$year, All_Constant$tuition_cost, color = type)) +geom_line()+ coord_flip() + ggtitle('Tuition by year for school with tuition type All Constant')+theme(plot.title = element_text(hjust = 0.5))+facet_wrap(~All_Constant$type, ncol = 3, scales = 'free')+ylab("Tuition in USD)")
ggplot(All_Constant, mapping = aes(All_Constant$year, All_Constant$tuition_cost, color = type)) +geom_point() + ggtitle('Tuition by year for school with tuition type All Constant')+theme(plot.title = element_text(hjust = 0.5))+facet_wrap(~All_Constant$type, ncol = 3, scales = 'free')+ylab("Tuition in USD)")
ggplot(All_Constant, mapping = aes(All_Constant$year, All_Constant$tuition_cost, color = type)) +geom_point()+ coord_flip() + ggtitle('Tuition by year for school with tuition type All Constant')+theme(plot.title = element_text(hjust = 0.5))+facet_wrap(~All_Constant$type, ncol = 3, scales = 'free')+ylab("Tuition in USD)")
ggplot(All_Constant, mapping = aes(All_Constant$year, All_Constant$tuition_cost, color = type)) +geom_point()+ coord_flip() + ggtitle('Tuition by Year for School with Tuition Type: All Constant')+theme(plot.title = element_text(hjust = 0.5))+facet_wrap(~All_Constant$type, ncol = 3, scales = 'free')+ylab("Tuition in USD)")
#filter for different tuition type
All_Constant = historical_tuition%>%
filter(historical_tuition$tuition_type == "All Constant")
Four_Year_Constant = historical_tuition%>%
filter(historical_tuition$tuition_type == "4 Year Constant")
Two_Year_Constant = historical_tuition%>%
filter(historical_tuition$tuition_type == "2 Year Constant")
View(Four_Year_Constant)
ggplot(All_Constant, mapping = aes(All_Constant$year, All_Constant$tuition_cost, color = type)) +geom_point()+ coord_flip() + ggtitle('Tuition by Year for School with Tuition Type: All Constant')+theme(plot.title = element_text(hjust = 0.5))+facet_wrap(~All_Constant$type, ncol = 3, scales = 'free')+ylab("Tuition in USD)")
ggplot(Four_Year_Constant, mapping = aes(Four_Year_Constant$year, Four_Year_Constant$tuition_cost, color = type)) +geom_point()+ coord_flip() + ggtitle('Tuition by Year for School with Tuition Type: 4 Year Constant')+theme(plot.title = element_text(hjust = 0.5))+facet_wrap(~Four_Year_Constant$type, ncol = 3, scales = 'free')+ylab("Tuition in USD)")
ggplot(Two_Year_Constant, mapping = aes(Two_Year_Constant$year, Two_Year_Constant$tuition_cost, color = type)) +geom_point()+ coord_flip() + ggtitle('Tuition by Year for School with Tuition Type: 2 Year Constant')+theme(plot.title = element_text(hjust = 0.5))+facet_wrap(~Two_Year_Constant$type, ncol = 3, scales = 'free')+ylab("Tuition in USD)")
ggplot(All_Constant, mapping = aes(All_Constant$year, All_Constant$tuition_cost, color = type)) +geom_point()+ coord_flip() + ggtitle('Tuition by Year for School with Tuition Type: All Constant')+theme(plot.title = element_text(hjust = 0.5))+facet_wrap(~All_Constant$type, ncol = 3, scales = 'free')+ylab("Tuition in USD")
ggplot(Four_Year_Constant, mapping = aes(Four_Year_Constant$year, Four_Year_Constant$tuition_cost, color = type)) +geom_point()+ coord_flip() + ggtitle('Tuition by Year for School with Tuition Type: 4 Year Constant')+theme(plot.title = element_text(hjust = 0.5))+facet_wrap(~Four_Year_Constant$type, ncol = 3, scales = 'free')+ylab("Tuition in USD")
ggplot(Two_Year_Constant, mapping = aes(Two_Year_Constant$year, Two_Year_Constant$tuition_cost, color = type)) +geom_point()+ coord_flip() + ggtitle('Tuition by Year for School with Tuition Type: 2 Year Constant')+theme(plot.title = element_text(hjust = 0.5))+facet_wrap(~Two_Year_Constant$type, ncol = 3, scales = 'free')+ylab("Tuition in USD")
ggplot(All_Constant, mapping = aes(All_Constant$year, All_Constant$tuition_cost, color = type)) +geom_point()+ coord_flip() + ggtitle('Tuition by Year for School with Tuition Type: All Constant')+theme(plot.title = element_text(hjust = 0.5))+facet_wrap(~All_Constant$type, ncol = 3, scales = 'free')+ylab("Tuition in USD") +xlab("Year")
ggplot(Four_Year_Constant, mapping = aes(Four_Year_Constant$year, Four_Year_Constant$tuition_cost, color = type)) +geom_point()+ coord_flip() + ggtitle('Tuition by Year for School with Tuition Type: 4 Year Constant')+theme(plot.title = element_text(hjust = 0.5))+facet_wrap(~Four_Year_Constant$type, ncol = 3, scales = 'free')+ylab("Tuition in USD")+xlab("Year")
ggplot(Two_Year_Constant, mapping = aes(Two_Year_Constant$year, Two_Year_Constant$tuition_cost, color = type)) +geom_point()+ coord_flip() + ggtitle('Tuition by Year for School with Tuition Type: 2 Year Constant')+theme(plot.title = element_text(hjust = 0.5))+facet_wrap(~Two_Year_Constant$type, ncol = 3, scales = 'free')+ylab("Tuition in USD")+xlab("Year")
View(Fianl_data)
Final_data = Final_data%>%
mutate(
Mid_career_pay_paidoff = Fianl_data$`Mid-Career Pay` - Fianl_data$out_of_state_tuition_and_fee,
Early_career_pay_paidoff = Fianl_data$`Early Career Pay` - Fianl_data$out_of_state_tuition_and_fee
Fianl_data = left_join(Best_School_clean, tuition_with_diversity, by = "name") %>%
Fianl_data = left_join(Best_School_clean, tuition_with_diversity, by = "name") %>%
na.omit(Fianl_data)
rownames(Fianl_data)=1:nrow(Fianl_data)
Final_data = Final_data%>%
mutate(
Mid_career_pay_paidoff = Fianl_data$`Mid-Career Pay` - Fianl_data$out_of_state_tuition_and_fee)%>%
mutate(
Early_career_pay_paidoff = Fianl_data$`Early Career Pay` - Fianl_data$out_of_state_tuition_and_fee
)
Fianl_data = left_join(Best_School_clean, tuition_with_diversity, by = "name") %>%
na.omit(Fianl_data)
rownames(Fianl_data)=1:nrow(Fianl_data)
Fianl_data = Final_data%>%
mutate(
Mid_career_pay_paidoff = Fianl_data$`Mid-Career Pay` - Fianl_data$out_of_state_tuition_and_fee)%>%
mutate(
Early_career_pay_paidoff = Fianl_data$`Early Career Pay` - Fianl_data$out_of_state_tuition_and_fee
)
Fianl_data = left_join(Best_School_clean, tuition_with_diversity, by = "name") %>%
na.omit(Fianl_data)
rownames(Fianl_data)=1:nrow(Fianl_data)
Fianl_data = Final_data%>%
mutate(
Mid_career_pay_paidoff = Fianl_data$`Mid-Career Pay` - Fianl_data$out_of_state_tuition_and_fee)%>%
mutate(
Early_career_pay_paidoff = Fianl_data$`Early Career Pay` - Fianl_data$out_of_state_tuition_and_fee
)
View(Fianl_data)
# Call out packages that needed for the project
library(ggplot2)
library(repurrrsive)
library(tidyverse)
library(stringr)
library(dplyr)
library(tidytext)
library(wordcloud)
library(broom)
library(readxl)
library(lubridate)
library(magrittr)
library(rvest)
library(xml2)
library(choroplethr)
library(choroplethrMaps)
library(countrycode)
library("xlsx")
tuition_cost <-read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-10/tuition_cost.csv')
tuition_cost = tuition_cost%>%
select(name, state, state_code, type, degree_length, in_state_total, out_of_state_total)%>%
mutate(in_state_tuition_and_fee = in_state_total, out_of_state_tuition_and_fee = out_of_state_total, in_state_total = NULL, out_of_state_total = NULL)
head(tuition_cost,10)
student_diversity <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-10/student_diversity.csv')
#Select relevant columns and change column name "INSTITUTION" to “name” to later binding datasets
student_diversity = student_diversity%>%
rename(name = "INSTITUTION")%>%
select(name, ENROLLMENT:WHITE, `TOTAL MINORITY` )
#Modify school name to match school name in the tuition_cost data
student_diversity_cleaned = student_diversity%>%
mutate(name = str_replace(name, "U.", "University "))
#Extract state from school name with the help of state.name which contains the list of all the state name
student_diversity_cleaned = student_diversity_cleaned%>%
mutate(state = str_extract(name, paste0(state.name, collapse = "|")))
#Clear any unnecessary spaces in "name" and remove the state at the end of "name"
student_diversity_cleaned$name = str_squish(student_diversity_cleaned$name)
position_to_remove = str_count(student_diversity_cleaned$state)+1
student_diversity_cleaned$name = str_sub(student_diversity_cleaned$name, 1, -(position_to_remove))
student_diversity_cleaned$name = str_trim(student_diversity_cleaned$name)
head(student_diversity_cleaned,10)
tuition_with_diversity = left_join(tuition_cost, student_diversity_cleaned, by = c("name","state"))%>%
na.omit(tuition_with_diversity)
tuition_with_diversity = tuition_with_diversity[order(tuition_with_diversity$state, tuition_with_diversity$name),]
head(tuition_with_diversity,10)
#Initial datapull
url <- ("https://www.payscale.com/college-salary-report/bachelors")
best_school_test = url %>%
read_html() %>%
html_table(fill = TRUE) %>%
.[[1]]
store_url = "https://www.payscale.com/college-salary-report/best-schools-by-state/bachelors/"
#Modify state in state.name to match the format in url
state_name = str_replace_all(state.name, " ","-")
#Initial dataframe to start with
Best_School = best_school_test
#Keep appending data to dataframe
for (i in 1:length(state_name)){
url = paste0(store_url,state_name[i])
school_state_data = paste0("Best_School",i)
school_state_data = url %>%
read_html() %>%
html_table(fill = TRUE) %>%
.[[1]]
Best_School = rbind(Best_School, school_state_data)
}
#Remove rows in initial dataframe
Best_School = Best_School[-(1:25),]
#Modify "School Name" to "name" to match the tuition_with_diversity dataset
Best_School_clean = Best_School%>%
rename(name = "School Name")
#Extract school name
Best_School_clean$name = str_remove(Best_School_clean$name, "School Name:")
Best_School_clean$`Mid-Career Pay` = str_remove(Best_School_clean$`Mid-Career Pay`, "Mid-Career Pay:")
#Extract number content from certain column
Best_School_clean = Best_School_clean%>%
mutate(
Rank = parse_number(Best_School_clean$Rank),
"Early Career Pay" = parse_number(Best_School_clean$`Early Career Pay`),
"Mid-Career Pay" = parse_number(Best_School_clean$`Mid-Career Pay`),
"% High Meaning" = parse_number(Best_School_clean$`% High Meaning`),
"% STEM Degrees" = parse_number(Best_School_clean$`% STEM Degrees`),
)
Best_School_clean = Best_School_clean%>%
select(name, "Early Career Pay", "Mid-Career Pay", "% High Meaning", "% STEM Degrees" )
head(Best_School_clean,10)
Fianl_data = left_join(Best_School_clean, tuition_with_diversity, by = "name") %>%
na.omit(Fianl_data)
rownames(Fianl_data)=1:nrow(Fianl_data)
Fianl_data = Final_data%>%
mutate(
Mid_career_pay_paidoff = Fianl_data$`Mid-Career Pay` - Fianl_data$out_of_state_tuition_and_fee)%>%
mutate(
Early_career_pay_paidoff = Fianl_data$`Early Career Pay` - Fianl_data$out_of_state_tuition_and_fee
)
head(Fianl_data,10)
Fianl_data$Mid_career_pay_paidoff = Fianl_data$`Mid-Career Pay` - Fianl_data$out_of_state_tuition_and_fee
View(Fianl_data)
Fianl_data$Early_career_pay_paidoff = Fianl_data$`Early Career Pay` - Fianl_data$out_of_state_tuition_and_fee
View(Fianl_data)
head(Fianl_data,10)
getwd()
write.xlsx(Fianl_data, "Tidy_Data.xlsx", row.names = FALSE)
historical_tuition =read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-10/historical_tuition.csv')
write.xlsx(historical_tuition, "Tuition_trend.xlsx")
head(historical_tuition,10)
#filter for different tuition type
All_Constant = historical_tuition%>%
filter(historical_tuition$tuition_type == "All Constant")
Four_Year_Constant = historical_tuition%>%
filter(historical_tuition$tuition_type == "4 Year Constant")
Two_Year_Constant = historical_tuition%>%
filter(historical_tuition$tuition_type == "2 Year Constant")
ggplot(All_Constant, mapping = aes(All_Constant$year, All_Constant$tuition_cost, color = type)) +geom_point()+ coord_flip() + ggtitle('Tuition by Year for School with Tuition Type: All Constant')+theme(plot.title = element_text(hjust = 0.5))+facet_wrap(~All_Constant$type, ncol = 3, scales = 'free')+ylab("Tuition in USD") +xlab("Year")
ggplot(Four_Year_Constant, mapping = aes(Four_Year_Constant$year, Four_Year_Constant$tuition_cost, color = type)) +geom_point()+ coord_flip() + ggtitle('Tuition by Year for School with Tuition Type: 4 Year Constant')+theme(plot.title = element_text(hjust = 0.5))+facet_wrap(~Four_Year_Constant$type, ncol = 3, scales = 'free')+ylab("Tuition in USD")+xlab("Year")
ggplot(Two_Year_Constant, mapping = aes(Two_Year_Constant$year, Two_Year_Constant$tuition_cost, color = type)) +geom_point()+ coord_flip() + ggtitle('Tuition by Year for School with Tuition Type: 2 Year Constant')+theme(plot.title = element_text(hjust = 0.5))+facet_wrap(~Two_Year_Constant$type, ncol = 3, scales = 'free')+ylab("Tuition in USD")+xlab("Year")
View(Fianl_data)
state_data = Fianl_data%>%
group_by(Fianl_data$state)%>%
nest()
View(state_data)
state_data = Fianl_data%>%
group_by(Fianl_data$state)%>%
summarise("Early Career Pay" = mean(Fianl_data$`Early Career Pay`))
View(state_data)
state_data = Fianl_data%>%
group_by(Fianl_data$state)
state_data = Fianl_data%>%
group_by(Fianl_data$state)%>%
summarise(
count = n()
Mean_Early_Career_Pay = mean(Fianl_data$`Early Career Pay`))
state_data = Fianl_data%>%
group_by(Fianl_data$state)%>%
summarise(
count = n(),
Mean_Early_Career_Pay = mean(Fianl_data$`Early Career Pay`))
View(state_data)
state_data = Fianl_data%>%
group_by(Fianl_data$state)%>%
summarise(
count = n(),
Mean_Early_Career_Pay = mean(Early Career Pay))
state_data = Fianl_data%>%
group_by(Fianl_data$state)%>%
summarise(
count = n(),
Mean_Early_Career_Pay = mean("Early Career Pay"))
View(state_data)
state_data = Fianl_data%>%
group_by(Fianl_data$state)%>%
summarise(
count = n(),
Mean_Early_Career_Pay = mean(`Early Career Pay`))
View(state_data)
View(Fianl_data)
knitr::opts_chunk$set(echo = TRUE)
state_data = Fianl_data%>%
group_by(Fianl_data$state)%>%
summarise(
count = n(),
Mean_Early_Career_Pay = mean(`Early Career Pay`),
Mean_Mid_Career_pay = mean(`Mid-Career Pay`)
)
# Call out packages that needed for the project
library(ggplot2)
library(repurrrsive)
library(tidyverse)
library(stringr)
library(dplyr)
library(tidytext)
library(wordcloud)
library(broom)
library(readxl)
library(lubridate)
library(magrittr)
library(rvest)
library(xml2)
library(choroplethr)
library(choroplethrMaps)
library(countrycode)
library("xlsx")
state_data = Fianl_data%>%
group_by(Fianl_data$state)%>%
summarise(
count = n(),
Mean_Early_Career_Pay = mean(`Early Career Pay`),
Mean_Mid_Career_pay = mean(`Mid-Career Pay`)
)
View(state_data)
state_data = Fianl_data%>%
group_by(Fianl_data$state)%>%
summarise(
count = n(),
Mean_Early_Career_Pay = mean(`Early Career Pay`),
Mean_Mid_Career_pay = mean(`Mid-Career Pay`),
Mean_High_Meaning = mean(`% High Meaning`),
)
state_data = Fianl_data%>%
group_by(Fianl_data$state)%>%
summarise(
count = n(),
Mean_Early_Career_Pay = mean(`Early Career Pay`),
Mean_Mid_Career_pay = mean(`Mid-Career Pay`),
Mean_High_Meaning = mean(`% High Meaning`),
Mean_STEM_Degree = mean(`% STEM Degree`),
Mean_Out_Of_State_Cost = mean(`out_of_state_tuition_and_fee`),
Mean_Enrollment = mean(`ENROLLMENT`),
Mean_Minority = mean(`TOTAL MINORITY`),
Mean_early_paidoff = mean(`Early_career_pay_paidoff`),
Mean_mid_paidoff = mean(`Mid_career_pay_paidoff`)
)
state_data = Fianl_data%>%
group_by(Fianl_data$state)%>%
summarise(
count = n(),
Mean_Early_Career_Pay = mean(`Early Career Pay`),
Mean_Mid_Career_pay = mean(`Mid-Career Pay`),
Mean_High_Meaning = mean(`% High Meaning`),
Mean_STEM_Degree = mean(`% STEM Degrees`),
Mean_Out_Of_State_Cost = mean(`out_of_state_tuition_and_fee`),
Mean_Enrollment = mean(`ENROLLMENT`),
Mean_Minority = mean(`TOTAL MINORITY`),
Mean_early_paidoff = mean(`Early_career_pay_paidoff`),
Mean_mid_paidoff = mean(`Mid_career_pay_paidoff`)
)
write.xlsx(state_data, "state_data.xlsx")
View(state_data)
View(state_data)
#Tuition Analysis
ggplot(state_data, mapping = aes(state_data$`Fianl_data$state`, state_data$Mean_Out_Of_State_Cost, color = Mean_Out_Of_State_Cost)) +geom_bar()+ coord_flip() + ggtitle('Tuition by State')+theme(plot.title = element_text(hjust = 0.5))+ylab("Tuition in USD")+xlab("State")
#Tuition Analysis
ggplot(state_data, mapping = aes(state_data$`Fianl_data$state`, state_data$Mean_Out_Of_State_Cost)) +geom_bar()+ coord_flip() + ggtitle('Tuition by State')+theme(plot.title = element_text(hjust = 0.5))+ylab("Tuition in USD")+xlab("State")
state_data = Fianl_data%>%
group_by(Fianl_data$state)%>%
summarise(
count = n(),
Mean_Early_Career_Pay = mean(`Early Career Pay`),
Mean_Mid_Career_pay = mean(`Mid-Career Pay`),
Mean_High_Meaning = mean(`% High Meaning`),
Mean_STEM_Degree = mean(`% STEM Degrees`),
Mean_Out_Of_State_Cost = mean(`out_of_state_tuition_and_fee`),
Mean_Enrollment = mean(`ENROLLMENT`),
Mean_Minority = mean(`TOTAL MINORITY`),
Mean_early_paidoff = mean(`Early_career_pay_paidoff`),
Mean_mid_paidoff = mean(`Mid_career_pay_paidoff`)
)%>%
rename(state = "Fianl_data$state")
write.xlsx(state_data, "state_data.xlsx")
#Tuition Analysis
ggplot(state_data, mapping = aes(state_data$state, state_data$Mean_Out_Of_State_Cost)) +geom_bar()+ coord_flip() + ggtitle('Tuition by State')+theme(plot.title = element_text(hjust = 0.5))+ylab("Tuition in USD")+xlab("State")
#Tuition Analysis
ggplot(state_data, mapping = aes(state_data$state, state_data$Mean_Out_Of_State_Cost)) +geom_point()+ coord_flip() + ggtitle('Tuition by State')+theme(plot.title = element_text(hjust = 0.5))+ylab("Tuition in USD")+xlab("State")
#Salary Analysis
#Paidoff Analysis
#Tuition and Salary
#Tuition Analysis
ggplot(state_data, mapping = aes(state_data$state, state_data$Mean_Out_Of_State_Cost)) +geom_bar(stat = Mean_Out_Of_State_Cost)+ coord_flip() + ggtitle('Tuition by State')+theme(plot.title = element_text(hjust = 0.5))+ylab("Tuition in USD")+xlab("State")
#Tuition Analysis
ggplot(state_data, mapping = aes(state_data$state, state_data$Mean_Out_Of_State_Cost)) +geom_bar(stat = state_data$Mean_Out_Of_State_Cost)+ coord_flip() + ggtitle('Tuition by State')+theme(plot.title = element_text(hjust = 0.5))+ylab("Tuition in USD")+xlab("State")
#Tuition Analysis
ggplot(state_data, mapping = aes(state_data$state, state_data$Mean_Out_Of_State_Cost)) +geom_bar(stat = state)+ coord_flip() + ggtitle('Tuition by State')+theme(plot.title = element_text(hjust = 0.5))+ylab("Tuition in USD")+xlab("State")
#Tuition Analysis
ggplot(state_data, mapping = aes(state_data$state, state_data$Mean_Out_Of_State_Cost)) +geom_bar(stat = state_data$state)+ coord_flip() + ggtitle('Tuition by State')+theme(plot.title = element_text(hjust = 0.5))+ylab("Tuition in USD")+xlab("State")
#Tuition Analysis
tuition_analysis = data.frame(state = c(state_data$state), tuition = c(state_data$Mean_Out_Of_State_Cost))
#Tuition Analysis
tuition_analysis = data.frame(x = c(state_data$state), y = c(state_data$Mean_Out_Of_State_Cost))
ggplot(tuition_analysis, mapping = aes(state_data$state, state_data$Mean_Out_Of_State_Cost)) +geom_bar(stat = "identity")+ coord_flip() + ggtitle('Tuition by State')+theme(plot.title = element_text(hjust = 0.5))+ylab("Tuition in USD")+xlab("State")
#Tuition Analysis
ggplot(tuition_analysis, mapping = aes(state_data$state, state_data$Mean_Out_Of_State_Cost, color = state_data$Mean_Out_Of_State_Cost)) +geom_bar(stat = "identity")+ coord_flip() + ggtitle('Tuition by State')+theme(plot.title = element_text(hjust = 0.5))+ylab("Tuition in USD")+xlab("State")
#Salary Analysis
#Paidoff Analysis
#Tuition and Salary
#Tuition Analysis
ggplot(state_data, mapping = aes(state_data$state, state_data$Mean_Out_Of_State_Cost, color = state_data$Mean_Out_Of_State_Cost)) +geom_bar(stat = "identity")+ coord_flip() + ggtitle('Tuition by State')+theme(plot.title = element_text(hjust = 0.5))+ylab("Tuition in USD")+xlab("State")
#Salary Analysis
#Paidoff Analysis
#Tuition and Salary
tuition_analysis = state_data%>%
arrange(state_data$Mean_Out_Of_State_Cost)%>%
.[1:10,]
View(tuition_analysis)
tuition_analysis = state_data%>%
arrange(state_data$Mean_Out_Of_State_Cost, -1)%>%
.[1:10,]
tuition_analysis = state_data%>%
arrange(state_data$Mean_Out_Of_State_Cost, desc)%>%
.[1:10,]
tuition_analysis = state_data%>%
arrange(state_data$Mean_Out_Of_State_Cost, decreasing = TRUE)%>%
.[1:10,]
tuition_analysis = state_data%>%
arrange(desc(state_data$Mean_Out_Of_State_Cost))%>%
.[1:10,]
View(tuition_analysis)
#Tuition Analysis
tuition_analysis = state_data%>%
arrange(desc(state_data$Mean_Out_Of_State_Cost))%>%
.[1:10,]
ggplot(tuition_analysis, mapping = aes(tuition_analysis$state, tuition_analysis$Mean_Out_Of_State_Cost, color = tuition_analysis$Mean_Out_Of_State_Cost)) +geom_bar(stat = "identity")+ coord_flip() + ggtitle('Tuition by State')+theme(plot.title = element_text(hjust = 0.5))+ylab("Tuition in USD")+xlab("State")
#Salary Analysis
#Paidoff Analysis
#Tuition and Salary
