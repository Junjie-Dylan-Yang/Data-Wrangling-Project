student_diversity = student_diversity%>%
rename(name = "INSTITUTION")%>%
select(name, ENROLLMENT:WHITE, `TOTAL MINORITY` )
#Modify school name to match school name in the tuition_cost data
student_diversity_cleaned = student_diversity%>%
mutate(name = str_replace(name, "U.", "University "))
#Extract state from school name with the help of state.name which contains the list of all the state name
student_diversity_cleaned = student_diversity_cleaned%>%
mutate(state = str_extract(name, paste0(state.name, collapse = "|")))
#Clear any unnecessary spaces in "name" and remove the state at the end of "name"
student_diversity_cleaned$name = str_squish(student_diversity_cleaned$name)
position_to_remove = str_count(student_diversity_cleaned$state)+1
student_diversity_cleaned$name = str_sub(student_diversity_cleaned$name, 1, -(position_to_remove))
student_diversity_cleaned$name = str_trim(student_diversity_cleaned$name)
head(student_diversity_cleaned,10)
tuition_with_diversity = left_join(tuition_cost, student_diversity_cleaned, by = c("name","state"))%>%
na.omit(tuition_with_diversity)
tuition_with_diversity = tuition_with_diversity[order(tuition_with_diversity$state, tuition_with_diversity$name),]
head(tuition_with_diversity,10)
#Initial datapull
url <- ("https://www.payscale.com/college-salary-report/bachelors")
best_school_test = url %>%
read_html() %>%
html_table(fill = TRUE) %>%
.[[1]]
store_url = "https://www.payscale.com/college-salary-report/best-schools-by-state/bachelors/"
#Modify state in state.name to match the format in url
state_name = str_replace_all(state.name, " ","-")
#Initial dataframe to start with
Best_School = best_school_test
#Keep appending data to dataframe
for (i in 1:length(state_name)){
url = paste0(store_url,state_name[i])
school_state_data = paste0("Best_School",i)
school_state_data = url %>%
read_html() %>%
html_table(fill = TRUE) %>%
.[[1]]
Best_School = rbind(Best_School, school_state_data)
}
#Remove rows in initial dataframe
Best_School = Best_School[-(1:25),]
#Modify "School Name" to "name" to match the tuition_with_diversity dataset
Best_School_clean = Best_School%>%
rename(name = "School Name")
#Extract school name
Best_School_clean$name = str_remove(Best_School_clean$name, "School Name:")
Best_School_clean$`Mid-Career Pay` = str_remove(Best_School_clean$`Mid-Career Pay`, "Mid-Career Pay:")
#Extract number content from certain column
Best_School_clean = Best_School_clean%>%
mutate(
Rank = parse_number(Best_School_clean$Rank),
"Early Career Pay" = parse_number(Best_School_clean$`Early Career Pay`),
"Mid-Career Pay" = parse_number(Best_School_clean$`Mid-Career Pay`),
"% High Meaning" = parse_number(Best_School_clean$`% High Meaning`),
"% STEM Degrees" = parse_number(Best_School_clean$`% STEM Degrees`),
)
Best_School_clean = Best_School_clean%>%
select(name, "Early Career Pay", "Mid-Career Pay", "% High Meaning", "% STEM Degrees" )
head(Best_School_clean,10)
Fianl_data = left_join(Best_School_clean, tuition_with_diversity, by = "name") %>%
na.omit(Fianl_data)
rownames(Fianl_data)=1:nrow(Fianl_data)
Fianl_data$Mid_career_pay_paidoff = Fianl_data$`Mid-Career Pay` - Fianl_data$out_of_state_tuition_and_fee
Fianl_data$Early_career_pay_paidoff = Fianl_data$`Early Career Pay` - Fianl_data$out_of_state_tuition_and_fee
head(Fianl_data,10)
getwd()
write.xlsx(Fianl_data, "Tidy_Final_Data.xlsx", row.names = FALSE)
historical_tuition =read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-10/historical_tuition.csv')
write.xlsx(historical_tuition, "Tuition_trend.xlsx")
head(historical_tuition,10)
#filter for different tuition type
All_Constant = historical_tuition%>%
filter(historical_tuition$tuition_type == "All Constant")
Four_Year_Constant = historical_tuition%>%
filter(historical_tuition$tuition_type == "4 Year Constant")
Two_Year_Constant = historical_tuition%>%
filter(historical_tuition$tuition_type == "2 Year Constant")
ggplot(All_Constant, mapping = aes(All_Constant$year, All_Constant$tuition_cost, color = type)) +geom_point()+ coord_flip() + ggtitle('Tuition by Year for School with Tuition Type: All Constant')+theme(plot.title = element_text(hjust = 0.5))+facet_wrap(~All_Constant$type, ncol = 3, scales = 'free')+ylab("Tuition in USD") +xlab("Year")
ggplot(Four_Year_Constant, mapping = aes(Four_Year_Constant$year, Four_Year_Constant$tuition_cost, color = type)) +geom_point()+ coord_flip() + ggtitle('Tuition by Year for School with Tuition Type: 4 Year Constant')+theme(plot.title = element_text(hjust = 0.5))+facet_wrap(~Four_Year_Constant$type, ncol = 3, scales = 'free')+ylab("Tuition in USD")+xlab("Year")
ggplot(Two_Year_Constant, mapping = aes(Two_Year_Constant$year, Two_Year_Constant$tuition_cost, color = type)) +geom_point()+ coord_flip() + ggtitle('Tuition by Year for School with Tuition Type: 2 Year Constant')+theme(plot.title = element_text(hjust = 0.5))+facet_wrap(~Two_Year_Constant$type, ncol = 3, scales = 'free')+ylab("Tuition in USD")+xlab("Year")
state_data = Fianl_data%>%
group_by(Fianl_data$state)%>%
summarise(
count = n(),
Mean_Early_Career_Pay = mean(`Early Career Pay`),
Mean_Mid_Career_pay = mean(`Mid-Career Pay`),
Mean_High_Meaning = mean(`% High Meaning`),
Mean_STEM_Degree = mean(`% STEM Degrees`),
Mean_Out_Of_State_Cost = mean(`out_of_state_tuition_and_fee`),
Mean_Enrollment = mean(`ENROLLMENT`),
Mean_Minority = mean(`TOTAL MINORITY`),
Mean_early_paidoff = mean(`Early_career_pay_paidoff`),
Mean_mid_paidoff = mean(`Mid_career_pay_paidoff`)
)%>%
rename(state = "Fianl_data$state")
write.xlsx(state_data, "state_data.xlsx")
#Tuition Analysis
tuition_analysis = state_data%>%
arrange(desc(state_data$Mean_Out_Of_State_Cost))%>%
.[1:10,]
ggplot(tuition_analysis, mapping = aes(reorder(tuition_analysis$state,tuition_analysis$Mean_Out_Of_State_Cost ), tuition_analysis$Mean_Out_Of_State_Cost, fill = tuition_analysis$Mean_Out_Of_State_Cost)) +geom_bar(stat = "identity")+ coord_flip() + ggtitle('Top 10 States by Average out-of-state Tuition+Fee')+theme(plot.title = element_text(hjust = 0.5))+ylab("Tuition in USD")+xlab("State")+theme(legend.title = element_blank())
#Salary Analysis
mid_salary_analysis = state_data%>%
arrange(desc(state_data$Mean_Early_Career_Pay))%>%
.[1:10,]
early_salary_analysis = state_data%>%
arrange(desc(state_data$Mean_Early_Career_Pay))%>%
.[1:10,]
par(mfrow=c(1,2))
ggplot(mid_salary_analysis, mapping = aes(reorder(mid_salary_analysis$state,mid_salary_analysis$Mean_Mid_Career_pay ), mid_salary_analysis$Mean_Mid_Career_pay, fill = mid_salary_analysis$Mean_Mid_Career_pay)) +geom_bar(stat = "identity")+ coord_flip() + ggtitle('Top 10 States by Average Mid-Salary (5-10 Years Experience)')+theme(plot.title = element_text(hjust = 0.5))+ylab("Average Salary in USD")+xlab("State")+theme(legend.title = element_blank())
ggplot(early_salary_analysis, mapping = aes(reorder(early_salary_analysis$state,early_salary_analysis$Mean_Early_Career_Pay ), early_salary_analysis$Mean_Early_Career_Pay, fill = early_salary_analysis$Mean_Early_Career_Pay)) +geom_bar(stat = "identity")+ coord_flip() + ggtitle('Top 10 States by Average Early-Salary (0-5 Years Experience)')+theme(plot.title = element_text(hjust = 0.5))+ylab("Average Salary in USD")+xlab("State")+theme(legend.title = element_blank())
#Paidoff Analysis (Tuition vs Salary)
Paidoff_early = state_data%>%
select(state, "Mean_early_paidoff")
Paidoff_early = Paidoff_early%>%
arrange(desc(Paidoff_early$Mean_early_paidoff))%>%
.[1:10,]
Paidoff_mid = state_data%>%
select(state, "Mean_mid_paidoff")
Paidoff_mid = Paidoff_mid%>%
arrange(desc(Paidoff_mid$Mean_mid_paidoff))%>%
.[1:10,]
par(mfrow=c(2,2))
ggplot(Paidoff_early, mapping = aes(reorder(Paidoff_early$state,Paidoff_early$Mean_early_paidoff ), Paidoff_early$Mean_early_paidoff, fill = Paidoff_early$Mean_early_paidoff)) +geom_bar(stat = "identity")+ coord_flip() + ggtitle('Top 10 States by Average of [Early Salary(0-5 Years Experience) - College Cost]')+theme(plot.title = element_text(hjust = 0.5))+ylab("Difference in USD")+xlab("State")+theme(legend.title = element_blank())
Paidoff_early_map = state_data%>%
select(state, "Mean_early_paidoff")
Paidoff_early_map$state = tolower(Paidoff_early_map$state)
Paidoff_early_map = Paidoff_early_map%>%
rename(region = state, value = "Mean_early_paidoff")
state_choropleth(Paidoff_early_map, title = 'Average of [Early Salary(0-5 Years Experience) - College Cost] in US')
ggplot(Paidoff_mid, mapping = aes(reorder(Paidoff_mid$state,Paidoff_mid$Mean_mid_paidoff ), Paidoff_mid$Mean_mid_paidoff, fill = Paidoff_mid$Mean_mid_paidoff)) +geom_bar(stat = "identity")+ coord_flip() + ggtitle('Top 10 States by Average of [Mid Salary(5-10 Years Experience) - College Cost]')+theme(plot.title = element_text(hjust = 0.5))+ylab("Difference in USD")+xlab("State")+theme(legend.title = element_blank())
Paidoff_mid_map = state_data%>%
select(state, "Mean_mid_paidoff")
Paidoff_mid_map$state = tolower(Paidoff_mid_map$state)
Paidoff_mid_map = Paidoff_mid_map%>%
rename(region = state, value = "Mean_mid_paidoff")
state_choropleth(Paidoff_mid_map, title = 'Average of [Mid Salary(5-10 Years Experience) - College Cost] in US')
knitr::opts_chunk$set(echo = TRUE)
# Call out packages that needed for the project
library(ggplot2)
library(repurrrsive)
library(tidyverse)
library(stringr)
library(dplyr)
library(tidytext)
library(wordcloud)
library(broom)
library(readxl)
library(lubridate)
library(magrittr)
library(rvest)
library(xml2)
library(choroplethr)
library(choroplethrMaps)
library(countrycode)
library("xlsx")
tuition_cost <-read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-10/tuition_cost.csv')
tuition_cost = tuition_cost%>%
select(name, state, state_code, type, degree_length, in_state_total, out_of_state_total)%>%
mutate(in_state_tuition_and_fee = in_state_total, out_of_state_tuition_and_fee = out_of_state_total, in_state_total = NULL, out_of_state_total = NULL)
head(tuition_cost,10)
student_diversity <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-10/student_diversity.csv')
#Select relevant columns and change column name "INSTITUTION" to “name” to later binding datasets
student_diversity = student_diversity%>%
rename(name = "INSTITUTION")%>%
select(name, ENROLLMENT:WHITE, `TOTAL MINORITY` )
#Modify school name to match school name in the tuition_cost data
student_diversity_cleaned = student_diversity%>%
mutate(name = str_replace(name, "U.", "University "))
#Extract state from school name with the help of state.name which contains the list of all the state name
student_diversity_cleaned = student_diversity_cleaned%>%
mutate(state = str_extract(name, paste0(state.name, collapse = "|")))
#Clear any unnecessary spaces in "name" and remove the state at the end of "name"
student_diversity_cleaned$name = str_squish(student_diversity_cleaned$name)
position_to_remove = str_count(student_diversity_cleaned$state)+1
student_diversity_cleaned$name = str_sub(student_diversity_cleaned$name, 1, -(position_to_remove))
student_diversity_cleaned$name = str_trim(student_diversity_cleaned$name)
head(student_diversity_cleaned,10)
tuition_with_diversity = left_join(tuition_cost, student_diversity_cleaned, by = c("name","state"))%>%
na.omit(tuition_with_diversity)
tuition_with_diversity = tuition_with_diversity[order(tuition_with_diversity$state, tuition_with_diversity$name),]
head(tuition_with_diversity,10)
#Initial datapull
url <- ("https://www.payscale.com/college-salary-report/bachelors")
best_school_test = url %>%
read_html() %>%
html_table(fill = TRUE) %>%
.[[1]]
store_url = "https://www.payscale.com/college-salary-report/best-schools-by-state/bachelors/"
#Modify state in state.name to match the format in url
state_name = str_replace_all(state.name, " ","-")
#Initial dataframe to start with
Best_School = best_school_test
#Keep appending data to dataframe
for (i in 1:length(state_name)){
url = paste0(store_url,state_name[i])
school_state_data = paste0("Best_School",i)
school_state_data = url %>%
read_html() %>%
html_table(fill = TRUE) %>%
.[[1]]
Best_School = rbind(Best_School, school_state_data)
}
#Remove rows in initial dataframe
Best_School = Best_School[-(1:25),]
#Modify "School Name" to "name" to match the tuition_with_diversity dataset
Best_School_clean = Best_School%>%
rename(name = "School Name")
#Extract school name
Best_School_clean$name = str_remove(Best_School_clean$name, "School Name:")
Best_School_clean$`Mid-Career Pay` = str_remove(Best_School_clean$`Mid-Career Pay`, "Mid-Career Pay:")
#Extract number content from certain column
Best_School_clean = Best_School_clean%>%
mutate(
Rank = parse_number(Best_School_clean$Rank),
"Early Career Pay" = parse_number(Best_School_clean$`Early Career Pay`),
"Mid-Career Pay" = parse_number(Best_School_clean$`Mid-Career Pay`),
"% High Meaning" = parse_number(Best_School_clean$`% High Meaning`),
"% STEM Degrees" = parse_number(Best_School_clean$`% STEM Degrees`),
)
Best_School_clean = Best_School_clean%>%
select(name, "Early Career Pay", "Mid-Career Pay", "% High Meaning", "% STEM Degrees" )
head(Best_School_clean,10)
Final_data = left_join(Best_School_clean, tuition_with_diversity, by = "name") %>%
na.omit(Final_data)
rownames(Final_data)=1:nrow(Final_data)
Final_data$Mid_career_pay_paidoff = Final_data$`Mid-Career Pay` - Final_data$out_of_state_tuition_and_fee
Final_data$Early_career_pay_paidoff = Final_data$`Early Career Pay` - Final_data$out_of_state_tuition_and_fee
head(Final_data,10)
getwd()
write.xlsx(Final_data, "Tidy_Final_Data.xlsx", row.names = FALSE)
historical_tuition =read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-10/historical_tuition.csv')
write.xlsx(historical_tuition, "Tuition_trend.xlsx")
head(historical_tuition,10)
#filter for different tuition type
All_Constant = historical_tuition%>%
filter(historical_tuition$tuition_type == "All Constant")
Four_Year_Constant = historical_tuition%>%
filter(historical_tuition$tuition_type == "4 Year Constant")
Two_Year_Constant = historical_tuition%>%
filter(historical_tuition$tuition_type == "2 Year Constant")
ggplot(All_Constant, mapping = aes(All_Constant$year, All_Constant$tuition_cost, color = type)) +geom_point()+ coord_flip() + ggtitle('Tuition by Year for School with Tuition Type: All Constant')+theme(plot.title = element_text(hjust = 0.5))+facet_wrap(~All_Constant$type, ncol = 3, scales = 'free')+ylab("Tuition in USD") +xlab("Year")
ggplot(Four_Year_Constant, mapping = aes(Four_Year_Constant$year, Four_Year_Constant$tuition_cost, color = type)) +geom_point()+ coord_flip() + ggtitle('Tuition by Year for School with Tuition Type: 4 Year Constant')+theme(plot.title = element_text(hjust = 0.5))+facet_wrap(~Four_Year_Constant$type, ncol = 3, scales = 'free')+ylab("Tuition in USD")+xlab("Year")
ggplot(Two_Year_Constant, mapping = aes(Two_Year_Constant$year, Two_Year_Constant$tuition_cost, color = type)) +geom_point()+ coord_flip() + ggtitle('Tuition by Year for School with Tuition Type: 2 Year Constant')+theme(plot.title = element_text(hjust = 0.5))+facet_wrap(~Two_Year_Constant$type, ncol = 3, scales = 'free')+ylab("Tuition in USD")+xlab("Year")
state_data = Final_data%>%
group_by(Final_data$state)%>%
summarise(
count = n(),
Mean_Early_Career_Pay = mean(`Early Career Pay`),
Mean_Mid_Career_pay = mean(`Mid-Career Pay`),
Mean_High_Meaning = mean(`% High Meaning`),
Mean_STEM_Degree = mean(`% STEM Degrees`),
Mean_Out_Of_State_Cost = mean(`out_of_state_tuition_and_fee`),
Mean_Enrollment = mean(`ENROLLMENT`),
Mean_Minority = mean(`TOTAL MINORITY`),
Mean_early_paidoff = mean(`Early_career_pay_paidoff`),
Mean_mid_paidoff = mean(`Mid_career_pay_paidoff`)
)%>%
rename(state = "Final_data$state")
write.xlsx(state_data, "state_data.xlsx")
#Tuition Analysis
tuition_analysis = state_data%>%
arrange(desc(state_data$Mean_Out_Of_State_Cost))%>%
.[1:10,]
ggplot(tuition_analysis, mapping = aes(reorder(tuition_analysis$state,tuition_analysis$Mean_Out_Of_State_Cost ), tuition_analysis$Mean_Out_Of_State_Cost, fill = tuition_analysis$Mean_Out_Of_State_Cost)) +geom_bar(stat = "identity")+ coord_flip() + ggtitle('Top 10 States by Average out-of-state Tuition+Fee')+theme(plot.title = element_text(hjust = 0.5))+ylab("Tuition in USD")+xlab("State")+theme(legend.title = element_blank())
#Salary Analysis
mid_salary_analysis = state_data%>%
arrange(desc(state_data$Mean_Early_Career_Pay))%>%
.[1:10,]
early_salary_analysis = state_data%>%
arrange(desc(state_data$Mean_Early_Career_Pay))%>%
.[1:10,]
par(mfrow=c(1,2))
ggplot(mid_salary_analysis, mapping = aes(reorder(mid_salary_analysis$state,mid_salary_analysis$Mean_Mid_Career_pay ), mid_salary_analysis$Mean_Mid_Career_pay, fill = mid_salary_analysis$Mean_Mid_Career_pay)) +geom_bar(stat = "identity")+ coord_flip() + ggtitle('Top 10 States by Average Mid-Salary (5-10 Years Experience)')+theme(plot.title = element_text(hjust = 0.5))+ylab("Average Salary in USD")+xlab("State")+theme(legend.title = element_blank())
ggplot(early_salary_analysis, mapping = aes(reorder(early_salary_analysis$state,early_salary_analysis$Mean_Early_Career_Pay ), early_salary_analysis$Mean_Early_Career_Pay, fill = early_salary_analysis$Mean_Early_Career_Pay)) +geom_bar(stat = "identity")+ coord_flip() + ggtitle('Top 10 States by Average Early-Salary (0-5 Years Experience)')+theme(plot.title = element_text(hjust = 0.5))+ylab("Average Salary in USD")+xlab("State")+theme(legend.title = element_blank())
#Paidoff Analysis (Tuition vs Salary)
Paidoff_early = state_data%>%
select(state, "Mean_early_paidoff")
Paidoff_early = Paidoff_early%>%
arrange(desc(Paidoff_early$Mean_early_paidoff))%>%
.[1:10,]
Paidoff_mid = state_data%>%
select(state, "Mean_mid_paidoff")
Paidoff_mid = Paidoff_mid%>%
arrange(desc(Paidoff_mid$Mean_mid_paidoff))%>%
.[1:10,]
par(mfrow=c(2,2))
ggplot(Paidoff_early, mapping = aes(reorder(Paidoff_early$state,Paidoff_early$Mean_early_paidoff ), Paidoff_early$Mean_early_paidoff, fill = Paidoff_early$Mean_early_paidoff)) +geom_bar(stat = "identity")+ coord_flip() + ggtitle('Top 10 States by Average of [Early Salary(0-5 Years Experience) - College Cost]')+theme(plot.title = element_text(hjust = 0.5))+ylab("Difference in USD")+xlab("State")+theme(legend.title = element_blank())
Paidoff_early_map = state_data%>%
select(state, "Mean_early_paidoff")
Paidoff_early_map$state = tolower(Paidoff_early_map$state)
Paidoff_early_map = Paidoff_early_map%>%
rename(region = state, value = "Mean_early_paidoff")
state_choropleth(Paidoff_early_map, title = 'Average of [Early Salary(0-5 Years Experience) - College Cost] in US')
ggplot(Paidoff_mid, mapping = aes(reorder(Paidoff_mid$state,Paidoff_mid$Mean_mid_paidoff ), Paidoff_mid$Mean_mid_paidoff, fill = Paidoff_mid$Mean_mid_paidoff)) +geom_bar(stat = "identity")+ coord_flip() + ggtitle('Top 10 States by Average of [Mid Salary(5-10 Years Experience) - College Cost]')+theme(plot.title = element_text(hjust = 0.5))+ylab("Difference in USD")+xlab("State")+theme(legend.title = element_blank())
Paidoff_mid_map = state_data%>%
select(state, "Mean_mid_paidoff")
Paidoff_mid_map$state = tolower(Paidoff_mid_map$state)
Paidoff_mid_map = Paidoff_mid_map%>%
rename(region = state, value = "Mean_mid_paidoff")
state_choropleth(Paidoff_mid_map, title = 'Average of [Mid Salary(5-10 Years Experience) - College Cost] in US')
state_nested = Final_data %>%
group_by(state)%>%
nest()
View(state_nested)
View(state_nested)
View(state_nested[[2]][[1]])
state_nested = Final_data %>%
group_by(state)%>%
nest()
state_lm <- function(df){
lm(`Mid-Career Pay` ~ ., data = df)
}
state_all_lm <- state_nested$data %>% map(state_lm)
state_nested = Final_data %>%
group_by(state)%>%
nest()
state_lm <- function(df){
lm(`Mid-Career Pay` ~ ., data = df)
}
state_nested <- state_nested$data %>%
mutate(lm_fit = map(data, state_lm))
state_nested = Final_data %>%
group_by(state)%>%
nest()
state_lm <- function(df){
lm("Mid-Career Pay" ~ ., data = df)
}
state_nested <- state_nested$data %>%
mutate(lm_fit = map(data, state_lm))
View(Final_data)
School_type_data = Final_data%>%
group_by(Final_data$type)%>%
summarise(
count = n(),
Mean_Early_Career_Pay = mean(`Early Career Pay`),
Mean_Mid_Career_pay = mean(`Mid-Career Pay`),
Mean_High_Meaning = mean(`% High Meaning`),
Mean_STEM_Degree = mean(`% STEM Degrees`),
Mean_Out_Of_State_Cost = mean(`out_of_state_tuition_and_fee`),
Mean_Enrollment = mean(`ENROLLMENT`),
Mean_Minority = mean(`TOTAL MINORITY`),
Mean_early_paidoff = mean(`Early_career_pay_paidoff`),
Mean_mid_paidoff = mean(`Mid_career_pay_paidoff`)
)
View(School_type_data)
School_type_data = Final_data%>%
group_by(Final_data$type)%>%
summarise(
count = n(),
Mean_Early_Career_Pay = mean(`Early Career Pay`),
Mean_Mid_Career_pay = mean(`Mid-Career Pay`),
Mean_High_Meaning = mean(`% High Meaning`),
Mean_STEM_Degree = mean(`% STEM Degrees`),
Mean_Out_Of_State_Cost = mean(`out_of_state_tuition_and_fee`),
Mean_Enrollment = mean(`ENROLLMENT`),
Mean_Minority = mean(`TOTAL MINORITY`),
Mean_early_paidoff = mean(`Early_career_pay_paidoff`),
Mean_mid_paidoff = mean(`Mid_career_pay_paidoff`)
)%>%
rename(type = "Final_data$type")
School_type_data
Year_type_data = Final_data%>%
group_by(Final_data$degree_length)%>%
summarise(
count = n(),
Mean_Early_Career_Pay = mean(`Early Career Pay`),
Mean_Mid_Career_pay = mean(`Mid-Career Pay`),
Mean_High_Meaning = mean(`% High Meaning`),
Mean_STEM_Degree = mean(`% STEM Degrees`),
Mean_Out_Of_State_Cost = mean(`out_of_state_tuition_and_fee`),
Mean_Enrollment = mean(`ENROLLMENT`),
Mean_Minority = mean(`TOTAL MINORITY`),
Mean_early_paidoff = mean(`Early_career_pay_paidoff`),
Mean_mid_paidoff = mean(`Mid_career_pay_paidoff`)
)%>%
rename(degree_length = "Final_data$degree_length")
Year_type_data
Year_type_data = Final_data%>%
group_by(Final_data$degree_length)%>%
summarise(
count = n(),
Mean_Early_Career_Pay = mean(`Early Career Pay`),
Mean_Mid_Career_pay = mean(`Mid-Career Pay`),
Mean_High_Meaning = mean(`% High Meaning`),
Mean_STEM_Degree = mean(`% STEM Degrees`),
Mean_Out_Of_State_Cost = mean(`out_of_state_tuition_and_fee`),
Mean_Enrollment = mean(`ENROLLMENT`),
Mean_Minority = mean(`TOTAL MINORITY`),
Mean_early_paidoff = mean(`Early_career_pay_paidoff`),
Mean_mid_paidoff = mean(`Mid_career_pay_paidoff`)
)%>%
rename(degree_length = "Final_data$degree_length")
Year_type_data
knitr::opts_chunk$set(echo = TRUE)
# Call out packages that needed for the project
library(ggplot2)
library(repurrrsive)
library(tidyverse)
library(stringr)
library(dplyr)
library(tidytext)
library(wordcloud)
library(broom)
library(readxl)
library(lubridate)
library(magrittr)
library(rvest)
library(xml2)
library(choroplethr)
library(choroplethrMaps)
library(countrycode)
library("xlsx")
tuition_cost <-read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-10/tuition_cost.csv')
tuition_cost = tuition_cost%>%
select(name, state, state_code, type, degree_length, in_state_total, out_of_state_total)%>%
mutate(in_state_tuition_and_fee = in_state_total, out_of_state_tuition_and_fee = out_of_state_total, in_state_total = NULL, out_of_state_total = NULL)
head(tuition_cost,10)
student_diversity <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-10/student_diversity.csv')
#Select relevant columns and change column name "INSTITUTION" to “name” to later binding datasets
student_diversity = student_diversity%>%
rename(name = "INSTITUTION")%>%
select(name, ENROLLMENT:WHITE, `TOTAL MINORITY` )
#Modify school name to match school name in the tuition_cost data
student_diversity_cleaned = student_diversity%>%
mutate(name = str_replace(name, "U.", "University "))
#Extract state from school name with the help of state.name which contains the list of all the state name
student_diversity_cleaned = student_diversity_cleaned%>%
mutate(state = str_extract(name, paste0(state.name, collapse = "|")))
#Clear any unnecessary spaces in "name" and remove the state at the end of "name"
student_diversity_cleaned$name = str_squish(student_diversity_cleaned$name)
position_to_remove = str_count(student_diversity_cleaned$state)+1
student_diversity_cleaned$name = str_sub(student_diversity_cleaned$name, 1, -(position_to_remove))
student_diversity_cleaned$name = str_trim(student_diversity_cleaned$name)
head(student_diversity_cleaned,10)
tuition_with_diversity = left_join(tuition_cost, student_diversity_cleaned, by = c("name","state"))%>%
na.omit(tuition_with_diversity)
tuition_with_diversity = tuition_with_diversity[order(tuition_with_diversity$state, tuition_with_diversity$name),]
head(tuition_with_diversity,10)
#Initial datapull
url <- ("https://www.payscale.com/college-salary-report/bachelors")
best_school_test = url %>%
read_html() %>%
html_table(fill = TRUE) %>%
.[[1]]
store_url = "https://www.payscale.com/college-salary-report/best-schools-by-state/bachelors/"
#Modify state in state.name to match the format in url
state_name = str_replace_all(state.name, " ","-")
#Initial dataframe to start with
Best_School = best_school_test
#Keep appending data to dataframe
for (i in 1:length(state_name)){
url = paste0(store_url,state_name[i])
school_state_data = paste0("Best_School",i)
school_state_data = url %>%
read_html() %>%
html_table(fill = TRUE) %>%
.[[1]]
Best_School = rbind(Best_School, school_state_data)
}
knitr::opts_chunk$set(echo = TRUE)
# Call out packages that needed for the project
library(ggplot2)
library(repurrrsive)
library(tidyverse)
library(stringr)
library(dplyr)
library(tidytext)
library(wordcloud)
library(broom)
library(readxl)
library(lubridate)
library(magrittr)
library(rvest)
library(xml2)
library(choroplethr)
library(choroplethrMaps)
library(countrycode)
library("xlsx")
tuition_cost <-read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-10/tuition_cost.csv')
tuition_cost = tuition_cost%>%
select(name, state, state_code, type, degree_length, in_state_total, out_of_state_total)%>%
mutate(in_state_tuition_and_fee = in_state_total, out_of_state_tuition_and_fee = out_of_state_total, in_state_total = NULL, out_of_state_total = NULL)
head(tuition_cost,10)
student_diversity <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-10/student_diversity.csv')
#Select relevant columns and change column name "INSTITUTION" to “name” to later binding datasets
student_diversity = student_diversity%>%
rename(name = "INSTITUTION")%>%
select(name, ENROLLMENT:WHITE, `TOTAL MINORITY` )
#Modify school name to match school name in the tuition_cost data
student_diversity_cleaned = student_diversity%>%
mutate(name = str_replace(name, "U.", "University "))
#Extract state from school name with the help of state.name which contains the list of all the state name
student_diversity_cleaned = student_diversity_cleaned%>%
mutate(state = str_extract(name, paste0(state.name, collapse = "|")))
#Clear any unnecessary spaces in "name" and remove the state at the end of "name"
student_diversity_cleaned$name = str_squish(student_diversity_cleaned$name)
position_to_remove = str_count(student_diversity_cleaned$state)+1
student_diversity_cleaned$name = str_sub(student_diversity_cleaned$name, 1, -(position_to_remove))
student_diversity_cleaned$name = str_trim(student_diversity_cleaned$name)
head(student_diversity_cleaned,10)
tuition_with_diversity = left_join(tuition_cost, student_diversity_cleaned, by = c("name","state"))%>%
na.omit(tuition_with_diversity)
tuition_with_diversity = tuition_with_diversity[order(tuition_with_diversity$state, tuition_with_diversity$name),]
head(tuition_with_diversity,10)
#Initial datapull
url <- ("https://www.payscale.com/college-salary-report/bachelors")
best_school_test = url %>%
read_html() %>%
html_table(fill = TRUE) %>%
.[[1]]
